<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8">
<title>Assessment Unit Recommendation</title>
<meta name="description" content="Recommendation Report for Unit: {ASSESSMENT_UNIT_NAME}">
<meta name="author" content="IBM Transformation Advisor">
<style type="text/css">
	html, body, div, iframe, h1, h2, h3, h4, p, a, em, sup,
			b, center, tfoot, ul {
			margin:0;
			padding:0;
			border: 0;
			font-size: 100%;
			font: inherit;
			vertical-align: baseline;
		}
		
		table, thead, tbody, tr, td, th {
			margin:0;
			padding:0;
			font-size: 100%;
			font: inherit;
			vertical-align: baseline;
		}
		
		html {
			font-size: 100%;
		}

		/* Table: tbody */
		ul {
			list-style: none;
		}
		/*set initial value*/

		body {
			background: #ededed;
			color: #333333;
			font-size: 1em;
			/** 16px **/

			font-family: "HelvRegularIBM", "Helvetica Neue", Arial, sans-serif;
			padding-bottom: 22px;
			position: relative;
		}
		/***
		**
		** Fonts
		**
		***/

		h1 {
			/* 28px % 16 */
			font-size: 1.75em;
			font-weight: bold;
		}
		h1:first-of-type {
			margin-top: 20px;
		}
		h2 {
			color: #008571;
			font-size: 1.3em;
			font-weight: bold;
		}
		h3 {
			font-size: 1.125em;
			font-weight: bold;
		}
		h1,
		h2,
		h3,
		h4,
		p {
			margin: 10px 0;
		}
		p,
		a {
			/* 14 (pixels) % 16 (pixels) */
			
			font-size: 0.875rem;
		}
		p > a {
			font-size: 1em;
		}
		a {
			color: #333;
			text-decoration: none;
		}
		p b,
		caption b {
			font-weight: bold;
		}
		ul ul .feature-list {
			padding-left: 20px;
		}
  		ul ul .feature {
			padding-left: 40px;
		}
		.bolden {
			font-weight: bold;
			font-family: "HelvNeueBold";
		}
		.analyze .flash__numbers {
			font-family: "HelvBoldIBM", "HelveticaNeue-Bold", "Helvetica Neue Bold", "HelveticaNeue", "Helvetica Neue", Helvetica, Arial, Roboto, sans-serif;
			font-size: 2.75em;
		}

		.wrapper {
			position: relative;
			margin-right: auto;
			margin-left: auto;
			width: 96%;
			/* Holding outermost DIV */
		}
		.wrapper:nth-child(2) {
			padding-bottom: 22px;
		}
		.recap {
			margin-top: 30px;
		}
		.recap ul {
			overflow: hidden;
		}
		.analyze .recap li {
            background: #fff;
            display: block;
			float: left;
			margin: 10px;
			padding: 10px 3px;
			width: 14.5%;
			min-height: 125px;
			text-align: center;
        }
		.recap li:first-child {
			margin-left: 0;
		}
		.analyze > .wrapper > .recap li:last-child {
            background: transparent;
            margin-right: 0;
            padding: 0;
            text-align: left;
            min-width: 49.5%;
            max-width: 49.5%;
        }
        .analyze > .wrapper > .recap li:last-child p {
            font-size: 0.8em;
            margin: 5px 0 20px;
            line-height: 1.3em;
        }
        .results-title {
			color: #008571;
			margin: 10px;
		}
        .analyze .table-code { width: 100%; }
        .issues-of-one-category {
            background: #fff;
            margin-bottom: 20px;
            padding: 20px;
        }
        .issues-of-one-category table {
            font-family: Arial, Helvetica, sans-serif;
            font-size: 0.8em;

            border-collapse: separate;
            border-spacing: 0;
            table-layout: fixed;
            width: 100%;
        }
        .issues-of-one-category table caption {
            line-height: 1.4em;
            padding-bottom: 20px;
            text-align: left;
        }
        .issues-of-one-category tr.summary {
            background: #d4f0ff;
        }
        .issues-of-one-category tr.hiddenRow {
            display: none;
            vertical-align: middle;
            visibility: hidden;
        }
        .issues-of-one-category tr.visibleRow {
            vertical-align: middle;
            visibility: visible;
        }
        .issues-of-one-category tr.summary .col1summarymodule {
        	font-weight: bold; 
        	word-break: break-all;
        }
       	.issues-of-one-category tr.visibleRow .col1main {
       		padding-left: .2em;
        	word-wrap: break-word;
        }
      	.issues-of-one-category tr.visibleRow .col1child {
       		padding-left: .7em;
        	word-wrap: break-word;
        }
       	.issues-of-one-category tr.visibleRow .col1grandchild {
       		padding-left: 1.2em;
        	word-wrap: break-word;
        }
		.issues-of-one-category th,
        .issues-of-one-category td {
            border-bottom: 1px solid #D6D6D6;
            border-right: 1px solid #D6D6D6;
            line-height: 1.2em;
            text-align: center;
            width: 8%;
        }
        .issues-of-one-category th:first-child,
        .issues-of-one-category td:first-child,
        .issues-of-one-category .visibleRow td:first-child {
            text-align: left;
            width: 4%;
        }
        .issues-of-one-category .summary td:first-child:hover { cursor: pointer; }
        .issues-of-one-category th:last-child,
        .issues-of-one-category th:nth-child(2),
        .issues-of-one-category td:last-child,
        .issues-of-one-category td:nth-child(2){
             width: 18%;
         }
        .issues-of-one-category th {
            color: #5A5A5A;
            font-weight: bold;
            padding: .5em;
            vertical-align: bottom;
        }
        .issues-of-one-category td { padding: .5em; }

        .recommendations table {
            font-family: Arial, Helvetica, sans-serif;
            table-layout: fixed;
            width: 100%;
        }
        .recommendations tbody tr {
            border-top: 1px solid #D6D6D6;
        }
        .recommendations th,
        .recommendations td {
            font-size: 0.875em;
            line-height: 1.2em;
            padding-bottom: 10px;
            padding-left: 0;
            padding-right: 10px;
            padding-top: 10px;
            text-align: left;
            width: 15%;
            white-space: pre-wrap;
            word-wrap: normal;
        }
        .recommendations th:first-child,
        .recommendations td:first-child {
            text-align: center;
			width: 10%;
        }
 		.recommendations th:last-child,
		.recommendations td:last-child {
			width: 50%;
			text-align: left;
		}
		.recommendations td.center,
		.recommendations th.center {
            text-align: center;
		}
		.recommendations td.severity-label,
		.recommendations th.severity-label {
			width: 10%;
		}
        .recommendations th {
            color: #5A5A5A;
            font-weight: bold;
            padding-top: 0;
            text-transform: uppercase;
            vertical-align: bottom;
        }
        .recommendations td { vertical-align: top; }
        .recommendations-summary {
            background: #fff;
            padding: 20px 20px 20px 20px;
            position: relative;
        }

		.analyze table.code {table-layout: auto;
                width: auto;
				border-collapse: collapse;
				border: solid 2px gray;
				border-spacing: 0;
				background-color: #F7F8F9;}
		.analyze table.code td{table-layout: auto;
                width: auto;
				border-right: 1px;
  				border-bottom: 1px;
				border: solid 1px gray;
				padding: 5px;}				

		.analyze .Text 			{ } 
		.analyze .Italic			{font-family: tahoma; font-size: 80%; font-style: italic}
		.analyze .Strong			{font-family: tahoma; font-size: 80%; font-weight: bold}
		.analyze .Header			{font-family: tahoma; font-size: 16px; color: black; font-weight: bold; }
		.analyze .SubHeader		{font-size: 100%; color: black; font-weight: bold; }
		.analyze .Code		    {font-family: monospace; color: black;  } 
		.analyze .JavaType 		{font-family: tahoma; font-size: 80%; color: black; } 		
		.analyze .JavaKeyword	{font-family: tahoma; font-size: 80%; color: #7F0055; font-weight: bold; } 		
		.analyze .JavaConst 		{font-family: tahoma; font-size: 80%; color: #2A00FF; } 		
		.analyze .JavaComment	{font-family: tahoma; font-size: 80%; color: #3F7F5F  } 		
		.analyze .Javadoc		{font-family: tahoma; font-size: 80%; color: blue  } 		
		.analyze .XmlDefinition	{font-family: tahoma; font-size: 80%; color: black; font-style: italic }
		.analyze .XmlElement 	{font-family: tahoma; font-size: 80%; color: #3F7F7F; } 		
		.analyze .XmlElementVal 	{font-family: tahoma; font-size: 80%; color: black }
		.analyze .XmlAttr 		{font-family: tahoma; font-size: 80%; color: #7F007F } 		
		.analyze .XmlAttrVal		{font-family: tahoma; font-size: 80%; color: #2A00FF; font-style: italic } 		


		.analyze .indent 		{padding-left: 10px;}
		.analyze .indent2 		{padding-left: 20px;}
		.analyze .indent3 		{padding-left: 30px;}
		.analyze .indent4 		{padding-left: 40px;}
		.analyze .tableIndent1	{margin-left: 20px;}
</style>
</head>
<body id="top" class="analyze">

  <div id="wrapper" class="wrapper" role="main">
    <h1>Recommendation Report for Assessment Unit: {ASSESSMENT_UNIT_NAME}</h1>
    <div class="header-sections list-header" role="main"><h2 id="Target" class="results-title">Target</h2></div>
    <div class="recommendations" role="main">
      <table summary="{ISSUE_CATEGORY_TITLE}">
        <thead>
        <tr class="results">
          <th class="col2thru12">Product Name</th>
          <th class="col2thru12">Product Version</th>
          <th class="col2thru12">Target</th>
        </tr>
        </thead>
        <tbody>
          <tr>
            <td class="col2thru12">{PRODUCT_NAME}</td>
            <td class="col2thru12">{PRODUCT_VERSION}</td>
            <td class="col2thru12">{TARGET_COLUMN}</td>
        </tbody>
      </table>
    </div>
    <br></br>
    <h2>Overall Compexity Score: {OVERALL_COMPLEXITY_SCORE}</h2>
  </div>
  <div class="recap" role="main">
    <ul>
      <li><p class="flash__numbers bolden">{NUM_OF_RED_ISSUES}</p><p class="cons-li-p">Red Issues</p></li>
      <li><p class="flash__numbers bolden">{NUM_OF_YELLOW_ISSUES}</p><p class="cons-li-p">Yellow Issues</p></li>
        <li><p class="flash__numbers bolden">{NUM_OF_GREEN_ISSUES}</p><p class="cons-li-p">Green Issues</p></li>
    </ul>
  </div>

  {ISSUE_TABLES}

<script type="text/javascript"> 

       // Detect IE - must be first so the script can be normalized for correct operation in IE
        var detectIE = function() {
            var ua = window.navigator.userAgent;

            // Test values; Uncomment to check result

            // IE 10
            // ua = 'Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Trident/6.0)';

            // IE 11
            // ua = 'Mozilla/5.0 (Windows NT 6.3; Trident/7.0; rv:11.0) like Gecko';

            // Edge 12 (Spartan)
            // ua = 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.71 Safari/537.36 Edge/12.0';

            // Edge 13
            // ua = 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2486.0 Safari/537.36 Edge/13.10586';

            var msie = ua.indexOf('MSIE ');
            if (msie > 0) {
            // IE 10 or older => return version number
            return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);
            }

            var trident = ua.indexOf('Trident/');
            if (trident > 0) {
                // IE 11 => return version number
                var rv = ua.indexOf('rv:');
                return parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);
            }

            var edge = ua.indexOf('Edge/');
            if (edge > 0) {
                // Edge (IE 12+) => return version number
                return parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);
            }

            // other browser
            return false;
        };

        if (detectIE()) {
        	// normalize the script for correct operation in IE
            if("document"in self){if(!("classList"in document.createElement("_"))||document.createElementNS&&!("classList"in document.createElementNS("http://www.w3.org/2000/svg","g"))){(function(t){"use strict";if(!("Element"in t))return;var e="classList",i="prototype",n=t.Element[i],s=Object,r=String[i].trim||function(){return this.replace(/^\s+|\s+$/g,"")},a=Array[i].indexOf||function(t){var e=0,i=this.length;for(;e<i;e++){if(e in this&&this[e]===t){return e}}return-1},o=function(t,e){this.name=t;this.code=DOMException[t];this.message=e},l=function(t,e){if(e===""){throw new o("SYNTAX_ERR","An invalid or illegal string was specified")}if(/\s/.test(e)){throw new o("INVALID_CHARACTER_ERR","String contains an invalid character")}return a.call(t,e)},c=function(t){var e=r.call(t.getAttribute("class")||""),i=e?e.split(/\s+/):[],n=0,s=i.length;for(;n<s;n++){this.push(i[n])}this._updateClassName=function(){t.setAttribute("class",this.toString())}},u=c[i]=[],f=function(){return new c(this)};o[i]=Error[i];u.item=function(t){return this[t]||null};u.contains=function(t){t+="";return l(this,t)!==-1};u.add=function(){var t=arguments,e=0,i=t.length,n,s=false;do{n=t[e]+"";if(l(this,n)===-1){this.push(n);s=true}}while(++e<i);if(s){this._updateClassName()}};u.remove=function(){var t=arguments,e=0,i=t.length,n,s=false,r;do{n=t[e]+"";r=l(this,n);while(r!==-1){this.splice(r,1);s=true;r=l(this,n)}}while(++e<i);if(s){this._updateClassName()}};u.toggle=function(t,e){t+="";var i=this.contains(t),n=i?e!==true&&"remove":e!==false&&"add";if(n){this[n](t)}if(e===true||e===false){return e}else{return!i}};u.toString=function(){return this.join(" ")};if(s.defineProperty){var h={get:f,enumerable:true,configurable:true};try{s.defineProperty(n,e,h)}catch(d){if(d.number===-2146823252){h.enumerable=false;s.defineProperty(n,e,h)}}}else if(s[i].__defineGetter__){n.__defineGetter__(e,f)}})(self)}else{(function(){"use strict";var t=document.createElement("_");t.classList.add("c1","c2");if(!t.classList.contains("c2")){var e=function(t){var e=DOMTokenList.prototype[t];DOMTokenList.prototype[t]=function(t){var i,n=arguments.length;for(i=0;i<n;i++){t=arguments[i];e.call(this,t)}}};e("add");e("remove")}t.classList.toggle("c3",false);if(t.classList.contains("c3")){var i=DOMTokenList.prototype.toggle;DOMTokenList.prototype.toggle=function(t,e){if(1 in arguments&&!this.contains(t)===!e){return e}else{return i.call(this,t)}}}t=null})()}};
        }


		document.addEventListener('DOMContentLoaded', function() {
			
			var getDocHeight = function() {
				var D = document;
				return Math.max(D.body.scrollHeight, D.documentElement.scrollHeight, D.body.offsetHeight, D.documentElement.offsetHeight, D.body.clientHeight, D.documentElement.clientHeight);
			}
			var scrollToAnchor = function(link, isConnSummary) {
				var getBoundsTop, duration, chosenElement;

				if (isConnSummary) {
					chosenElement = document.getElementById(link);
					getBoundsTop = chosenElement.getBoundingClientRect().top;
					duration = 500;
				} else {
					chosenElement = document.querySelector('#' + link);
					getBoundsTop = chosenElement.getBoundingClientRect().top;
					duration = arguments.length <= 1 || arguments[1] === undefined ? 500 : arguments[1];
				}

				var mili = 15,
					scrollPosition = window.scrollY,
					scrollTarget = scrollPosition + (getBoundsTop - 44),
					scrollCount = 0,
					scrollStep = Math.PI / (duration / mili),
					scrollDirection = scrollTarget > scrollPosition ? 1 : -1,
					cosParameter = Math.abs(scrollTarget - scrollPosition) / 2,
					docHeight = getDocHeight(),
					marginOfError = Math.ceil(cosParameter - cosParameter * Math.cos(1 * scrollStep)),
					scrollMargin;

				var scrollInterval = setInterval(function() {
					var reachedEdge = scrollDirection > 0 ? window.scrollY + window.innerHeight >= docHeight - 1 : window.scrollY < 1;

					if (Math.abs(scrollTarget - window.scrollY) > marginOfError && !reachedEdge) {
						scrollCount += 1;
						scrollMargin = cosParameter - cosParameter * Math.cos(scrollCount * scrollStep);
						window.scrollTo(0, scrollPosition + scrollMargin * scrollDirection);
					} else {
						clearInterval(scrollInterval);

						if (isConnSummary) {
							chosenElement.classList.add('shake');
							chosenElement.classList.add('is-paused');

							setTimeout(function() {
								chosenElement.classList.remove('is-paused');
							}, 0);
						}
					}
				}, mili);
			};

			var browserVersion = detectIE();

			// Shared Variables
			var navHeight = 44;
			var recommendationItems = document.getElementsByClassName('recommendation-toggle');
            		var recommendationHelp = document.getElementsByClassName('recommendation-toggle-help');
            		var recommendationDetails = document.getElementsByClassName('recommendation-toggle-results');
			var hasClass = function(el, cls) {
				return el.className && new RegExp("(\\s|^)" + cls + "(\\s|$)").test(el.className);
			};

			var toggleHideShowClasses = function(el, isTrue, subStringForHide, subStringForShow) {
				var stringForHide = subStringForHide || 'hide';
				var stringForShow = subStringForShow || 'show';

				if (isTrue) {
					el.classList.remove(stringForHide);
					el.classList.add(stringForShow);
				} else {
					el.classList.remove(stringForShow);
					el.classList.add(stringForHide);
				}
			};


			// Jump To Item
			var jumpToItems = document.querySelectorAll('.jump-item');
            var innerList = document.querySelectorAll('.inner--list--hide')[0];
            var archiveScrollBy = function(e) {
				e.preventDefault();

				var appId,
					appArchive,
					id,
					archiveDetail,
					archiveDetailCurrentLocation,
					archiveDetailTop,
					scrollToPosition,
					anchor = e.target;

                if (anchor.tagName === "SPAN") {
                	anchor = anchor.parentElement;
                }

				var resultsSection, isHidden, archiveAnchor;

				if (anchor.href) {
					id = anchor.href.split('#')[1];
					archiveDetail = document.getElementById(id);

					if (hasClass(archiveDetail,'archive')) {
						resultsSection = archiveDetail.querySelector('.archive-details');
						isHidden = hasClass(resultsSection, 'hide');

						if (isHidden) {
							toggleHideShowClasses(resultsSection, isHidden);
							archiveAnchor = resultsSection.previousElementSibling.querySelector('.archive-toggle');
							archiveAnchor.text = "Close details";

							// we want to the opposite of the function
							// because it will return true if all closed
							if (!checkForOpenArchiveDetails() && hasClass(collapseAnchor, 'disabled')) {
								collapseAnchor.classList.remove('disabled');
							}
						}
					} else if (archiveDetail.tagName === "H2" || archiveDetail.tagName === "H3" || archiveDetail.tagName === "H4" || hasClass(archiveDetail,'rule')) {
						appId = id.split('_')[0];
						appArchive = document.getElementById(appId);

						if(appArchive != null) {
							if (hasClass(appArchive,'archive')) {
								resultsSection = appArchive.querySelector('.archive-details');
								isHidden = hasClass(resultsSection, 'hide');

								if (isHidden) {
									toggleHideShowClasses(resultsSection, isHidden);
									archiveAnchor = resultsSection.previousElementSibling.querySelector('.archive-toggle');
									archiveAnchor.text = "Close details";

									// we want to the opposite of the function
									// because it will return true if all closed
									if (!checkForOpenArchiveDetails() && hasClass(collapseAnchor, 'disabled')) {
										collapseAnchor.classList.remove('disabled');
									}
								}
							}
						}

					}

					if (browserVersion) {
						archiveDetailCurrentLocation = archiveDetail.getBoundingClientRect();
						archiveDetailTop = archiveDetailCurrentLocation.top;
						scrollToPosition = archiveDetailTop - navHeight;

						window.scrollBy(0, scrollToPosition);
					} else {
						scrollToAnchor(id);
					}

                    innerList.style.display = 'none';

                    setTimeout(function() {
                    	innerList.removeAttribute('style');
                    }, 1000);
				}
			};

			for (var h = 0; h < jumpToItems.length; h++) {
				var jumpToItem = jumpToItems[h];
				jumpToItem.addEventListener('click', archiveScrollBy, false);
			}

			// Toggle Fixed/Non-Fixed Jump To
			var scrolledElement = document.querySelector('.nav-wrapper');
			var listener = function() {
				var y = window.pageYOffset;
				var container = document.getElementById("reportContainer")
				if(container) {
					var toBeFixed = y >= 490;
					toggleHideShowClasses(scrolledElement, toBeFixed, 'na-fixed', 'fixed-in-bluemix');
					var jumpBox = document.getElementsByClassName('jump-to-nav');
					if(toBeFixed) {//align the jump to box to the right end of the js-rule-severity rather than using
						//using a percent to alignment will always be accurate reqargless of the size of the window
						jumpBox[0].style.right = document.getElementById("js-rule-severity").getBoundingClientRect().left+'px';
					} else {
						jumpBox[0].removeAttribute('style');
					}
				} else {
					var scrolledElementClientRect = scrolledElement.getBoundingClientRect();
					var top = scrolledElementClientRect.top;
					var toBeFixed = y >= top;
					toggleHideShowClasses(scrolledElement, toBeFixed, 'na-fixed', 'fixed');
				}
			};

			window.addEventListener('scroll', listener, false);


           // Toggle Hidden Rows in Connectivity Summary
            var plus = '+', minus = '-';
            var activeCell = document.querySelectorAll('.summary .col1summarymodule, .summary .col1summarymodule .status');
            var summaryRows = document.querySelectorAll('.summary');
            var hiddenRows = document.querySelectorAll('[id^="rowHiddenMod"]');
            var toggleHiddenRows = function ( e ) {
                e.preventDefault();
                e.stopPropagation();

                var target;
                if ( e.target.tagName === 'SPAN' ) {
                    target = e.target.parentElement.parentElement;
                } else {
                    target = e.target.parentElement;
                }

                for (var m = 0; m < summaryRows.length; m++) {
                    if ( target === summaryRows[m] ) {
                        var plusMinus;
                        var hiddenRowIdx = m + 1;
                        var targetClass = '[id^="rowHiddenMod' + hiddenRowIdx + '"]';
                        var neededRows = document.querySelectorAll(targetClass);

                        for (var n = 0; n < neededRows.length; n++) {
                            var targetRow = neededRows[n];
                            var isExpanded = hasClass(targetRow, 'visibleRow');

                            toggleHideShowClasses(targetRow, !isExpanded, 'hiddenRow', 'visibleRow');

                            if ( isExpanded ) {
                                if ( n === 0 ) {
                                    plusMinus = targetRow.previousElementSibling.querySelector('.status');
                                    plusMinus.textContent = plus;
                                }
                            } else {
                                if ( n === 0 ) {
                                    plusMinus = targetRow.previousElementSibling.querySelector('.status');
                                    plusMinus.textContent = minus;
                                }

                                var innerTDs = targetRow.querySelectorAll('.col2thru12 a');
                                for (var p = 0; p < innerTDs.length; p++) {
                                    var innerTD = innerTDs[p];

                                    innerTD.addEventListener('click', showTable, false);
                                }
                            }
                        }
                    }
                }
            };

            for (var l = 0; l < activeCell.length; l++) {
                var cell = activeCell[l];
                cell.addEventListener('click', toggleHiddenRows, false);
            }

            // Link Headers to Results from Connectivity Summary
            var connectivitySummaryHeader = document.querySelectorAll('.issues-of-one-category .results th a');
            var showTableFromHeader = function ( e ) {
                // use preventDefault to allow us to use window.scrollBy
                e.preventDefault();

                var id, table, resultsSection,
                    target = e.target;

                if ( target.href ) {
                    id = target.href.split('#')[1];
                    table = document.getElementById(id);
 
                    if (browserVersion) {
                        var navCurrentLocation = table.getBoundingClientRect();
                        navCurrentLocation = navCurrentLocation.top - navHeight;
                        window.scrollBy( 0, navCurrentLocation );
                    } else {
                        setTimeout( function ( ) {
                            scrollToAnchor( id );
                        }, 0);
                    }
                }
            };

            for (var tableHeaders = 0; tableHeaders < connectivitySummaryHeader.length; tableHeaders++) {
                var tableHeader = connectivitySummaryHeader[tableHeaders];
                tableHeader.addEventListener('click', showTableFromHeader, false);
            }


            // Link Integer to Results Tables from Connectivity Summary
            var connectivitySummaryCell = document.querySelectorAll('.summary .col2thru12 a');
            var showTable = function ( e ) {
                // use preventDefault to allow us to use window.scrollBy
                e.preventDefault();

                var id, table, resultsSection,
                    isHidden, target, anchor;

                if ( e.target.tagName === 'A' ) {
                    target = e.target;
                } else {
                    target = e.target.parentElement;
                }

                if ( target.href ) {
                    id = target.href.split('#')[1];
                    table = document.getElementById(id);
                    resultsSection = table.parentElement.parentElement.parentElement;
                    anchor = resultsSection.previousElementSibling.previousElementSibling.querySelector('.results-toggle');
                    isHidden = hasClass(resultsSection, 'hide');

                    if ( isHidden ) {
                        toggleHideShowClasses(resultsSection, isHidden);

                        anchor.text = "Close results";

                        // we want to the opposite of the function
                        // because it will return true if all closed
                        if ( !checkForOpenFixesResults() && hasClass(collapseAnchor, 'disabled') ) {
                            collapseAnchor.classList.remove('disabled');
                        }
                    }

                    if (browserVersion) {
                        var navCurrentLocation = table.getBoundingClientRect();
                        navCurrentLocation = navCurrentLocation.top - navHeight;
                        window.scrollBy(0, navCurrentLocation);
                    } else {
                        setTimeout( function ( ) {
                            scrollToAnchor( id, true );
                        }, 0);
                    }
                }
            };

            for (var o = 0; o < connectivitySummaryCell.length; o++) {
                var anchorCell = connectivitySummaryCell[o];
                anchorCell.addEventListener('click', showTable, false);
            }


		}, false);
		
</script>
</body>
</html>
